/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer

/ {
    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3            &kp N4    &kp N5                             &kp N6       &kp N7       &kp N8             &kp N9   &kp N0    &kp EQUAL
&kp TAB    &kp Q   &kp W   &kp E             &kp R     &kp T                              &kp Y        &kp U        &kp I              &kp O    &kp P     &kp BACKSPACE
&kp LGUI   &kp A   &kp S   &kp D             &kp F     &kp G                              &kp H        &kp J        &kp K              &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z   &kp X   &kp C             &kp V     &kp B      &kp LBKT     &kp RBKT   &kp N        &kp M        &kp COMMA          &kp DOT  &kp FSLH  &mt RIGHT_SHIFT ESC
                           &kp LEFT_COMMAND  &kp LALT  &kp LSHFT  &kp ENTER    &kp SPACE  &mo_tog 1 1  &mo_tog 2 2  &kp RIGHT_COMMAND
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "keypad";
            bindings = <
&trans  &trans            &trans             &trans                &trans                 &trans                                  &trans        &trans        &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp KP_MINUS  &trans
&trans  &kp NUMBER_1      &kp NUMBER_2       &kp NUMBER_3          &kp NUMBER_4           &kp N5                                  &kp NUMBER_6  &kp N7        &kp N8         &kp N9           &kp KP_PLUS   &trans
&trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp NON_US_BACKSLASH                    &kp SLASH     &kp NUMBER_4  &kp N5         &kp NUMBER_6     &kp MINUS     &kp EQUAL
&trans  &trans            &trans             &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans                &trans    &trans  &kp PLUS      &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3     &kp N0        &kp PERIOD
                                             &trans                &trans                 &trans                &trans    &trans  &trans        &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "nav";
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans                        &trans            &trans    &trans       &trans         &trans        &trans
&trans        &kp F1        &kp F2        &kp F3        &kp F4        &trans                        &kp C_PREV        &kp HOME  &kp UP       &kp END        &kp C_MUTE    &trans
&trans        &kp F5        &kp F6        &kp F7        &kp F8        &kp LC(F5)                    &kp C_PLAY_PAUSE  &kp LEFT  &kp DOWN     &kp RIGHT      &kp C_VOL_UP  &trans
&trans        &kp F9        &kp F10       &kp F11       &kp F12       &trans      &trans    &trans  &kp C_NEXT        &kp DEL   &kp PAGE_UP  &kp PAGE_DOWN  &kp C_VOL_DN  &trans
                                          &trans        &trans        &trans      &trans    &trans  &trans            &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        game {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3        &kp N4     &kp N5                      &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp EQUAL
&kp TAB    &kp Q   &kp W   &kp E         &kp R      &kp T                       &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&kp LSHFT  &kp A   &kp S   &kp D         &kp F      &kp G                       &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z   &kp X   &kp C         &kp V      &kp B   &kp H     &kp RBKT  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                           &kp LEFT_ALT  &kp SPACE  &trans  &trans    &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
